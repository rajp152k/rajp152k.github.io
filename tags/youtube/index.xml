<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Youtube on (bit-mage)</title><link>https://rajp152k.github.io/tags/youtube/</link><description>Recent content in Youtube on (bit-mage)</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Wed, 25 Oct 2023 11:49:03 +0530</lastBuildDate><atom:link href="https://rajp152k.github.io/tags/youtube/index.xml" rel="self" type="application/rss+xml"/><item><title>Consumption Update</title><link>https://rajp152k.github.io/post/consumption-update/</link><pubDate>Wed, 25 Oct 2023 11:49:03 +0530</pubDate><guid>https://rajp152k.github.io/post/consumption-update/</guid><description>Two days ago I found myself scrolling mindlessly for half an hour and I decided I need to decide for real as to how I&amp;rsquo;m going to deal with this issue.
The problem with such a habit is that it is very convenient, engaging and it slices into precious time that I&amp;rsquo;d rather spend doing something more difficult and rewarding like reading.
While devising a strategy to deal with this behaviour, I concluded that videos themselves (long and short form) are the culprit to these new time sinks that I&amp;rsquo;ve been experiencing.</description></item><item><title>Common Lisp : The Series - 0.1 : Representing Programs</title><link>https://rajp152k.github.io/post/clts/clts-0.1/</link><pubDate>Tue, 29 Aug 2023 11:09:43 +0530</pubDate><guid>https://rajp152k.github.io/post/clts/clts-0.1/</guid><description>What makes lisp so unique is the way its code is structured - you definitely can&amp;rsquo;t miss all those parentheses. In this section of the series, I discuss the cause for such a representation and how that makes lisp unique in terms of how it views its code as data as code (aka homo-iconicity).
Further reading Python disassembler Homoiconity Byte Code S-expressions Common Operator Notation Abstract Syntax Tree The Blub Paradox Call to collaborate If you&amp;rsquo;re someone who shares the dream of making lisp popular and mainstream so that we can use it for our jobs and don&amp;rsquo;t have to switch to blubs to make a living (without denting its charm of course) , consider contributing to the notes and hit me up via mail or any of the other media I&amp;rsquo;m present on.</description></item><item><title>My Creation and Publishing Pipeline</title><link>https://rajp152k.github.io/post/my-creation-and-publishing-pipeline/</link><pubDate>Wed, 23 Aug 2023 18:13:15 +0530</pubDate><guid>https://rajp152k.github.io/post/my-creation-and-publishing-pipeline/</guid><description>This is an auxilliary post collating resources for the recent video I posted &amp;hellip;
The Pipeline All the ideas, resources that I want to process, any miscellaneous questions I have, are fed into the input-queue in the buffer All the manipulation takes place in these buffers - they&amp;rsquo;re org-files and I use org-roam to maintain the connections whenever a node set ripens and is worth sharing, I write a post or publish a video.</description></item><item><title>Common Lisp : The Series - 0 : Introduction</title><link>https://rajp152k.github.io/post/clts/clts-0/</link><pubDate>Mon, 21 Aug 2023 12:03:07 +0530</pubDate><guid>https://rajp152k.github.io/post/clts/clts-0/</guid><description>This is the first in a series of blog posts that follow the educational common lisp series on my youtube channel as an auxilliary.
I&amp;rsquo;ll be summarizing the videos in these blogs and be using these to point to references and additional resources that further elaborate the matter.
This post is about why you should consider learning common lisp and how I intend to execute the plan of building an end to end resource index while simultaneously being able to learn more about the language myself.</description></item></channel></rss>