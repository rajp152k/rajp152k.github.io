<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Linux on (bit-mage)</title><link>https://rajp152k.github.io/tags/linux/</link><description>Recent content in Linux on (bit-mage)</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Mon, 22 Sep 2025 10:20:05 +0530</lastBuildDate><atom:link href="https://rajp152k.github.io/tags/linux/index.xml" rel="self" type="application/rss+xml"/><item><title>OSDEV[0x1]: Studying Strategy (for Writing an Operating System)</title><link>https://rajp152k.github.io/post/osdev/0x1/</link><pubDate>Mon, 22 Sep 2025 10:20:05 +0530</pubDate><guid>https://rajp152k.github.io/post/osdev/0x1/</guid><description>&lt;hr&gt;
&lt;h2 id="hahahugoshortcode86s0hbhb"&gt;&lt;div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;"&gt;
 &lt;iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share; fullscreen" loading="eager" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/RVjGAbQKuCk?autoplay=0&amp;amp;controls=1&amp;amp;end=0&amp;amp;loop=0&amp;amp;mute=0&amp;amp;start=0" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" title="YouTube video"&gt;&lt;/iframe&gt;
 &lt;/div&gt;
&lt;/h2&gt;
&lt;p&gt;This video is the second part (0x1) of a series on writing an operating system. The creator, Raj, details the comprehensive studying and logging strategy he has designed to tackle this long-term project. The goal is to create a structured approach that fosters deep understanding, maintains motivation, and effectively manages the vast scope of the endeavor.&lt;/p&gt;</description></item><item><title>OSDev[0x0]: Writing an Operating System</title><link>https://rajp152k.github.io/post/osdev/0x0/</link><pubDate>Mon, 22 Sep 2025 10:15:06 +0530</pubDate><guid>https://rajp152k.github.io/post/osdev/0x0/</guid><description>&lt;hr&gt;
&lt;h2 id="hahahugoshortcode85s0hbhb"&gt;&lt;div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;"&gt;
 &lt;iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share; fullscreen" loading="eager" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/WoMibNj7XYM?autoplay=0&amp;amp;controls=1&amp;amp;end=0&amp;amp;loop=0&amp;amp;mute=0&amp;amp;start=0" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" title="YouTube video"&gt;&lt;/iframe&gt;
 &lt;/div&gt;
&lt;/h2&gt;
&lt;p&gt;This video serves as an announcement and introduction to a new, long-term project: Operating System Development (OSDev). The creator, Raj, explains his motivations for taking on this formidable challenge, his plan for documenting the journey, and the tools he intends to use.&lt;/p&gt;
&lt;h3 id="why-osdev-the-motivation-for-a-new-challenge"&gt;Why OSDev? The Motivation for a New Challenge&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;[00:00:15] Raj explains he&amp;rsquo;s been feeling bored with typical software engineering projects, which often feel too easy, especially with the rise of powerful LLMs.&lt;/li&gt;
&lt;li&gt;[00:01:21] He was seeking a &lt;strong&gt;&amp;ldquo;formidable project&amp;rdquo;&lt;/strong&gt; that would genuinely challenge him and couldn&amp;rsquo;t be easily solved by an AI tool.&lt;/li&gt;
&lt;li&gt;[00:03:00] A primary driver is a personal quest to feel competent. He believes that successfully building an operating system will cement his confidence as an engineer.&lt;/li&gt;
&lt;li&gt;[00:04:36] He wants to move beyond being a &amp;ldquo;hand-wavish&amp;rdquo; software engineer and gain a deep, fundamental understanding of the systems he uses daily, such as &lt;code&gt;systemd&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;[00:05:43] The project also serves as an opportunity to get back into reading textbooks and explore &amp;ldquo;old-school&amp;rdquo; computing concepts, which he enjoys.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="project-plan-and-documentation"&gt;Project Plan and Documentation&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;[00:02:40] The video series will be unstructured, presented as &lt;strong&gt;work logs and journals&lt;/strong&gt; rather than polished tutorials. He compares the process to exploring an &amp;ldquo;open-world RPG.&amp;rdquo;&lt;/li&gt;
&lt;li&gt;[00:02:47] His entire journey, including notes and logs, will be version-controlled and publicly available in a GitHub repository.&lt;/li&gt;
&lt;li&gt;[00:10:48] He plans for a continuous, podcast-style format with at least one video per week (Saturdays), supplemented by shorter, micro-video updates for milestones to maintain a tight feedback loop with his audience.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="tooling-and-workflow"&gt;Tooling and Workflow&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;[00:06:21] &lt;strong&gt;Emacs&lt;/strong&gt; will be the central hub for the project, used for coding, note-taking, journaling, and as an LLM client.&lt;/li&gt;
&lt;li&gt;[00:07:44] He will use &lt;strong&gt;Tmux&lt;/strong&gt; for terminal management and work within an &lt;strong&gt;openSUSE Tumbleweed&lt;/strong&gt; environment.&lt;/li&gt;
&lt;li&gt;[00:10:14] The project will involve programming in &lt;strong&gt;C and Assembly&lt;/strong&gt;, which he sees as a return to the fundamentals of programming.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="channel-direction-and-future-goals"&gt;Channel Direction and Future Goals&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;[00:09:44] Raj wants to shift his channel&amp;rsquo;s focus from showcasing tools in a &amp;ldquo;glass case&amp;rdquo; to demonstrating them in a real-world, complex application.&lt;/li&gt;
&lt;li&gt;[00:13:00] OSDev provides a natural, unforced use case to explore and evaluate different tools and programming philosophies.&lt;/li&gt;
&lt;li&gt;[00:11:15] He hopes the documented journey can serve as a guide for others who might want to start OSDev from scratch in the future.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="conclusion"&gt;Conclusion&lt;/h3&gt;
&lt;p&gt;Raj concludes by expressing his excitement for this new, challenging venture. He emphasizes that this project is as much for his personal growth and learning as it is for creating content. He plans to be much more regular with his uploads and invites viewers to follow along on this ambitious journey.&lt;/p&gt;</description></item><item><title>Blub in the Unix Philosophy</title><link>https://rajp152k.github.io/post/unixier-unix/</link><pubDate>Mon, 24 Mar 2025 15:18:39 +0530</pubDate><guid>https://rajp152k.github.io/post/unixier-unix/</guid><description>&lt;p&gt;I&amp;rsquo;ve always maintained a philosophical appetite for the tooling that I use.&lt;/p&gt;
&lt;p&gt;One of the core tenets of the Unix Philosophy&lt;sup id="fnref:1"&gt;&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref"&gt;1&lt;/a&gt;&lt;/sup&gt; is that everything is a file&amp;hellip;&lt;/p&gt;
&lt;p&gt;Plan9&lt;sup id="fnref:2"&gt;&lt;a href="#fn:2" class="footnote-ref" role="doc-noteref"&gt;2&lt;/a&gt;&lt;/sup&gt; has caught my eye due to its more homogenous design than the usual unix you&amp;rsquo;re used to.&lt;/p&gt;
&lt;p&gt;The footnoted-paper (~pre-mature book) is somewhat unhinged and doesn&amp;rsquo;t shy away from taking a jab at the Unix ecosystem and design.&lt;/p&gt;
&lt;p&gt;Apart from the several points the author makes, what stands out the most for me is the idea of &lt;em&gt;everything&lt;/em&gt; truly being a file: in hindsight, Unix only realizes a fraction of the principle.&lt;/p&gt;</description></item><item><title>Bells &amp; Whistles</title><link>https://rajp152k.github.io/post/bells-and-whistles/</link><pubDate>Sun, 23 Mar 2025 14:18:07 +0530</pubDate><guid>https://rajp152k.github.io/post/bells-and-whistles/</guid><description>&lt;p&gt;I&amp;rsquo;ve started spending some time per day without the usual modern software engineering tooling (LLMs, the Internet, etc) to explicitly maintain my cyber-deduction skills (in the context of Unix-based systems (BSDs, Linux, yet to explore Plan9), mostly because they power the majority of the global compute infrastructure).&lt;/p&gt;
&lt;p&gt;It&amp;rsquo;s fun: init your journey with a &lt;code&gt;man man&lt;/code&gt; (I&amp;rsquo;m an &lt;code&gt;info info&lt;/code&gt; guy myself) and be extremely skeptical of your usual modus operandi, ditching all assumptions and tumbling down the rabbit hole.&lt;/p&gt;</description></item><item><title>A CLI Timer to save your soul</title><link>https://rajp152k.github.io/post/cli-alarms/</link><pubDate>Thu, 26 Sep 2024 11:26:45 +0530</pubDate><guid>https://rajp152k.github.io/post/cli-alarms/</guid><description>&lt;p&gt;This is how I time my workblocks these days&amp;hellip;&lt;/p&gt;
&lt;h3 id="prerequisites"&gt;Prerequisites&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;ALSA : &lt;a href="https://wiki.archlinux.org/title/Advanced_Linux_Sound_Architecture"&gt;https://wiki.archlinux.org/title/Advanced_Linux_Sound_Architecture&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="functions"&gt;Functions&lt;/h3&gt;
&lt;pre tabindex="0"&gt;&lt;code&gt;single_beep() {
( \speaker-test --frequency $1 --test sine )&amp;amp;
pid=$!
\sleep 0.${2}s
\kill -9 $pid
}

morse(){
for i in {1..3};
do
 single_beep 400 $1
 \sleep 0.${2}s
done
}

sos() {
 morse 200 500
 morse 400 500
 morse 200 500
}

timer() {
 \sleep $1 &amp;amp;&amp;amp; sos &amp;amp;
}
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id="usage"&gt;Usage&lt;/h3&gt;
&lt;p&gt;The above can be sourced in your shell rc.&lt;br&gt;
I store it in a &lt;code&gt;.bash_funcs&lt;/code&gt; where I have all my functions and source them in the end of my rc as &lt;code&gt;source ~/.bash_funcs&lt;/code&gt;.&lt;/p&gt;</description></item><item><title>I'm in the Business of Ideation</title><link>https://rajp152k.github.io/post/gaming-youtube/</link><pubDate>Tue, 17 Sep 2024 09:01:23 +0530</pubDate><guid>https://rajp152k.github.io/post/gaming-youtube/</guid><description>&lt;p&gt;People have been responding to emacs and my beard.&lt;/p&gt;
&lt;p&gt;&lt;img src="https://ik.imagekit.io/rajp152k/rpdev/youtube/screenshot_2024-09-17T09:06:11.png?updatedAt=1726544204857" alt="comments"&gt;&lt;/p&gt;
&lt;p&gt;For a while I thought I did not have a lot to say. Turns out a lot of other humans are quite interested in the much of the same things that I&amp;rsquo;m into: my hatred for the mouse, and the consequent love for efficient workflows being some of them.&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;ll give the people what they want: I get to enjoy esoteric tech and spread the word, growing a cult, while other humans have enlightened experiences (believe me I do talk like this in person) and continue propogating the techno-propaganda about enjoying computer science.&lt;/p&gt;</description></item><item><title>Thinkpad X13 Gen 4 AMD Ryzen Pro 7840U &amp; Workflow Review</title><link>https://rajp152k.github.io/post/new-laptop/</link><pubDate>Thu, 06 Jun 2024 17:17:59 +0530</pubDate><guid>https://rajp152k.github.io/post/new-laptop/</guid><description>&lt;p&gt;I recently shifted my operations to a thinkpad x13g4amd (Ryzen 7840U + 780M Radeon) and am using this transfer as an opportunity to realize and improve my work related habits.&lt;/p&gt;
&lt;h2 id="gnulinux"&gt;GNU/Linux&lt;/h2&gt;
&lt;p&gt;All of my pipelines are based around Linux and the core GNU utils. I had to use windows for a while due to org-wide constraints but I&amp;rsquo;ve recently been given the signal to shift to linux.&lt;/p&gt;
&lt;p&gt;I rarely used any windows native tools for my workflows and there was always a layer of linux emulation/virtualization (wsl, scoop, and the likes) upon which I conducted my usual operations. Given I use Debian at home, a non native linux experience was frustrating at best and depressing at worst. No more, do I have to confine myself.&lt;/p&gt;</description></item></channel></rss>