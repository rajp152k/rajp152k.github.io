<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Version-Control on (bit-mage)</title><link>https://rajp152k.github.io/tags/version-control/</link><description>Recent content in Version-Control on (bit-mage)</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Mon, 21 Apr 2025 08:42:54 +0530</lastBuildDate><atom:link href="https://rajp152k.github.io/tags/version-control/index.xml" rel="self" type="application/rss+xml"/><item><title>Software Archaeology</title><link>https://rajp152k.github.io/post/programming-pilgrimages/</link><pubDate>Mon, 21 Apr 2025 08:42:54 +0530</pubDate><guid>https://rajp152k.github.io/post/programming-pilgrimages/</guid><description>&lt;p>During a recent surf, I chanced upon this beast.&lt;/p>
&lt;blockquote>
&lt;p>&lt;a href="https://github.com/git/git/commit/e83c5163316f89bfbde7d9ab23ca2e25604af290">The Information Manager from Hell&lt;/a>&lt;br>
&amp;ndash; Linus&lt;/p>&lt;/blockquote>
&lt;p>Thinking about compiling more such landmarks &amp;ndash; an itinerary for fellow cyber pilgrims&lt;/p>
&lt;p>Reviewing older codebases is an underrated exercise for software engineers&lt;/p>
&lt;p>It&amp;rsquo;s a journey through the evolution of code, revealing the engineering decisions that moulded what we deal with today&lt;/p>
&lt;p>Tracing the history of a project – understanding what worked, what didn&amp;rsquo;t, and how technical components evolved – has been a joy lately&lt;/p></description></item></channel></rss>